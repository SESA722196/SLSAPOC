name: coverity scanner
on:
  push:
    branches: [ master, stage, 'releases/**' ]
  pull_request: 
    branches: [ master, stage, 'releases/**' ]
  workflow_dispatch:
  release:
    types: [created]


jobs:
  Coverity:	
    runs-on: ubuntu-latest

    env:
      COV_URL: ${{ secrets.COV_URL }}
      COV_USER: ${{ secrets.COV_USER }}
      COV_TOKEN: ${{ secrets.COV_TOKEN }}
      CSA: cov-analysis-win64-2023.3.2
      COV_PROJ: dgpso-slsa-poc
      BUILD_CMD: ./build.sh slsa-poc.sln /p:Configuration=Release /p:Platform="x86"


    steps:

    - name: checkout repo
      uses: actions/checkout@v4

    - uses: actions/setup-dotnet@c7e7147fd3e41056e75a761416c06f5fa781b5fb
    - uses: nuget/setup-nuget@795d81930e6f583d6dbe984a5634efe5de9e54a7
  
    - run: ls -R
  
    - name: restore deps 
      run: nuget restore slsa-poc.sln

    - name: coverity download
      run: |
        curl -fLsS --user $COV_USER:$COV_TOKEN $COV_URL/downloadFile.htm?fn=$CSA.tar.gz | tar -C /tmp -xzf -
        curl -fLsS --user $COV_USER:$COV_TOKEN -o /tmp/$CSA/bin/license.dat $COV_URL/downloadFile.htm?fn=license.dat
        /tmp/$CSA/bin/cov-configure --cs


    - name: coverity scan
      if: ${{ github.event.name != 'pull_request' }}
      run: |
        export PATH=$PATH:/tmp/$CSA/bin
        set -x
        cov-build --dir idir --fs-capture-search $GITHUB_WORKSPACE $BUILD_CMD
        cov-analyze --dir idir --strip-path $GITHUB_WORKSPACE
        cov-commit-defects --dir idir --url $COV_URL --stream $COV_PROJ-${GITHUB_REF##*/} --scm git \
          --description $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID --target $RUNNER_OS --version $GITHUB_SHA
